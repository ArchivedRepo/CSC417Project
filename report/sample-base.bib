@article{10.1145/2461912.2461984,
author = {Macklin, Miles and M\"{u}ller, Matthias},
title = {Position Based Fluids},
year = {2013},
issue_date = {July 2013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {32},
number = {4},
issn = {0730-0301},
url = {https://doi.org/10.1145/2461912.2461984},
doi = {10.1145/2461912.2461984},
abstract = {In fluid simulation, enforcing incompressibility is crucial for realism; it is also computationally expensive. Recent work has improved efficiency, but still requires time-steps that are impractical for real-time applications. In this work we present an iterative density solver integrated into the Position Based Dynamics framework (PBD). By formulating and solving a set of positional constraints that enforce constant density, our method allows similar incompressibility and convergence to modern smoothed particle hydro-dynamic (SPH) solvers, but inherits the stability of the geometric, position based dynamics method, allowing large time steps suitable for real-time applications. We incorporate an artificial pressure term that improves particle distribution, creates surface tension, and lowers the neighborhood requirements of traditional SPH. Finally, we address the issue of energy loss by applying vorticity confinement as a velocity post process.},
journal = {ACM Trans. Graph.},
month = {jul},
articleno = {104},
numpages = {12},
keywords = {PCISPH, SPH, position based dynamics, constraint fluids, fluid simulation}
}

@inproceedings{10.5555/846276.846298,
author = {M\"{u}ller, Matthias and Charypar, David and Gross, Markus},
title = {Particle-Based Fluid Simulation for Interactive Applications},
year = {2003},
isbn = {1581136595},
publisher = {Eurographics Association},
address = {Goslar, DEU},
abstract = {Realistically animated fluids can add substantial realism to interactive applications such as virtual surgery simulators or computer games. In this paper we propose an interactive method based on Smoothed Particle Hydrodynamics (SPH) to simulate fluids with free surfaces. The method is an extension of the SPH-based technique by Desbrun to animate highly deformable bodies. We gear the method towards fluid simulation by deriving the force density fields directly from the Navier-Stokes equation and by adding a term to model surface tension effects. In contrast to Eulerian grid-based approaches, the particle-based approach makes mass conservation equations and convection terms dispensable which reduces the complexity of the simulation. In addition, the particles can directly be used to render the surface of the fluid. We propose methods to track and visualize the free surface using point splatting and marching cubes-based surface reconstruction. Our animation method is fast enough to be used in interactive systems and to allow for user interaction with models consisting of up to 5000 particles.},
booktitle = {Proceedings of the 2003 ACM SIGGRAPH/Eurographics Symposium on Computer Animation},
pages = {154â€“159},
numpages = {6},
location = {San Diego, California},
series = {SCA '03}
}

@online{pbf-cuda,
  author = {Keren Zhu},
  title = {The Simulation, Rendering and Application of Incompressible Fluids},
  year = 1999,
  url = {https://github.com/naeioi/PBF-CUDA/blob/master/paper/simu-fluids-keren.pdf},
  urldate = {2021-12-20}
}

@online{particle-simulation,
  author = {Simon Green},
  title = {Particle Simulation using CUDA},
  year = 2010,
  url = {https://developer.download.nvidia.com/assets/cuda/files/particles.pdf},
  urldate = {2021-12-20}
}

@online{particle-source,
  author = {Nvidia Corp},
  title = {Cuda Samples, Particles},
  year = 2021,
  url = {https://github.com/NVIDIA/cuda-samples/tree/master/Samples/particles},
  urldate = {2021-12-20}
}

@online{libigl,
  author = {Alec Jacobson},
  title = {libigl},
  year = 2021,
  url = {https://github.com/libigl/libigl/},
  urldate = {2021-12-20}
}

@online{cuda-interop,
  author = {Nvidia Corp},
  title = {CUDA OpenGL Interoperability},
  year = 2021,
  url = {https://docs.nvidia.com/cuda/cuda-runtime-api/group__CUDART__OPENGL.html},
  urldate = {2021-12-20}
}
